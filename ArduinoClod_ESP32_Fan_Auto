/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/3b546325-1ab1-4522-8c34-c33cec520cb7 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float temperature;
  int mode;
  int treshold;
  bool fanRunning;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <DHT.h>  //biblioteket for DHT sensoren

#define DHTPIN 13               // definer at pin 13 på ESP32 leser data frå DHT sensoren
#define DHTTYPE DHT22           // definere kva DHT sensor som er kobla på ESP32
#define blueLedPin 2            // definer at ESP32 skal bruka pin 2 til blå LED

DHT dht(DHTPIN, DHTTYPE);       // Sett DHT sensor til definerte varialbler over

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);           // Sett baudrate
  delay(1500);                  // Sett forsinkelse 1,5 sekund
  
  pinMode(blueLedPin, OUTPUT);  // Sett pin mode til variabel blueLedPin som ein utgang
  
  dht.begin();                  // DHT sensor startar å lesa
  
  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information you’ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
 temperature = dht.readTemperature();   // dht vil lesa temperatur ut på variabel temperature
   if (mode == 0) {                     // om mode er satt til 0, (av) så utfører programmet det som er inne i {} Om ikkje går programmet vidare
    fanRunning = false;                 // modus er satt til 0 (av) i mode, som betyr at vifte er av
    digitalWrite(blueLedPin, HIGH);     // LED er på 
    delay(100);                         // LED er på i 0,1 sekunder
    digitalWrite(blueLedPin, LOW);      // LED er av
    delay(2500);                        // LED er av i 2,5 sekunder
   }
  
  if (mode == 1) {                      // om mode er satt til 1 (på), så utfører programmet det som er inne i {} Om ikkje går programmet vidare
    fanRunning = true;                  // modus er satt til 1 (på) i mode, som betyr at vite er på konstant
    digitalWrite(blueLedPin, HIGH);     // LED er konstant på
    //delay(1000);                      // kode klar til å sette forsinkelse 
    //digitalWrite(blueLedPin, LOW);    // kode klar til å sette LED av  
    //delay(100);                       // kode klar til å sette forsinkelse
  }
  
  if (mode == 2) {                      // om mode er satt til 2 (auto), så utfører programmet det som er inne i {}
    if (temperature > treshold){        // om temperatur er meir enn det som er satt som treshold, så utføra programmet det som er inne i {}, elles så hoppar programmet til else kommandoen
      fanRunning = true;                // definer at vifte er på om verdi er over treshold 
      digitalWrite(blueLedPin, HIGH);   // LED er på 
      delay(500);                       // LED er på i 0,5 sekunder
      digitalWrite(blueLedPin, LOW);    // LED er av
      delay(500);                       // LED er av i 0,5 sekunder
    } else {                            // om temperaturen er mindre enn det som er satt som treshold, så utfører programmet det som står i {}
      fanRunning = false;               // definer at vifte er av om verdi er lavere enn treshold 
      digitalWrite(blueLedPin, HIGH);   // LED er på 
      delay(100);                       // LED er på i 0,1 sekunder
      digitalWrite(blueLedPin, LOW);    // LED er av
      delay(2500);                      // LED er av i 2,5 sekunder 
      
    }
  }
  delay(1000);                          // vent 1 sekund før void loop starter igjen
  
}




/*
  Since BlueLED is READ_WRITE variable, onBlueLEDChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBlueLEDChange()  {
  // Add your code here to act upon BlueLED change

  
  
}

/*
  Since Mode is READ_WRITE variable, onModeChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onModeChange()  {
  // Add your code here to act upon Mode change
}




/*
  Since Treshold is READ_WRITE variable, onTresholdChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTresholdChange()  {
  // Add your code here to act upon Treshold change
}


/*
  Since FanRunning is READ_WRITE variable, onFanRunningChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onFanRunningChange()  {
  // Add your code here to act upon FanRunning change
}
